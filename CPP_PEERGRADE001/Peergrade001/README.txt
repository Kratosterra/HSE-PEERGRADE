---------------------------------------------------------------------------------------------------------------------------
Добро пожаловать в исходный код программы “Работа с графами”!
---------------------------------------------------------------------------------------------------------------------------

Рекомендуемая система:
    > Clion (C++ - standard 2020).

	Windows 10 21H2 (любая сборка) - работоспособно.
	Windows 11 21H2 (любая сборка) - работоспособно.
	Linux - неизвестно.
	MacOS - не поддерживается.

Особенности программы:

	1. Работа с 10 видами представлений.
	2. Вывод в любом представлении, однако следует сменить тип представления в опции меню 3!
	3. Свободный переход между представлениями (наложены ограничения по типу графа).
	4. Автоматическое определение характеристик графа. Включая активацию ограничений на функционал.
	5. Проход в глубину и в ширину (для каждого по 2 способа).
	6. Наложены проверки правильности введённых представлений как из файла, так и с консоли.

Инструкции:

Вывод происходит в текущем представлении графа, следовательно, перед выводом в другом представлении воспользуйтесь
сменой представления, которая является опцией 3 в главном меню.

    1. Запуск
    2. Ввод графа любым представлением из файла или из консоли
    3. Произведение подсчетов или проходов.
    4. Смена типа представления.
    5. Вывод в текущем в консоль или в файл.

Формат ввода:

	Внимание: для файлов: каждое представления НЕ заканчивается переводом строки.

	1. Матрица смежности. (универсально для всех графов)

	|Для консоли:

	1. Вводится размерность квадратной матрицы (не более 7)
	2. Построчный ввод матрицы с разделителем " ".
	3. Числа разрешенные для строк [0, 4]

	|Для файла:

	1. Вводится размерность квадратной матрицы в !консоли! (не более 7).
	2. В файле Input.txt в директории проекта находится квадратная матрица с разделителем между элементами " " и
	разделителем строк - "\n". После последнего элемента в каждой строке пробел не ставится.
	3. Числа разрешенные для строк [0, 4]

	2. Матрица инцидентности. (универсально для всех графов)

	|Для консоли:

	1. Вводится две размерности матрицы (первая - количество вершин (строки), вторая - количество ребер (столбцы))
	       (не более 7 и 50 соответственно).
	2. Построчный ввод матрицы с разделителем " ".
	3. Числа разрешенные для строк [-1, 1]

	|Для файла:

	1. Вводится две размерности матрицы (первая - количество вершин (строки), вторая - количество ребер (столбцы))
	       в !консоли! (не более 7 и 50 соответственно).
	2. В файле Input.txt в директории проекта находится квадратная матрица с разделителем между элементами " " и
	       разделителм строк - "\n". После последнего элемента в каждой строке пробел не ставится.
	3. Числа разрешенные для строк [-1, 1]

	3. Список смежности. (универсально для всех графов)

	|Для консоли:

        1. Вводится количество вершин (не более 7).
        2. Для каждой вершины вводится количество ее смежных и каждая из смежных через разделитель " " (не более 6).

	|Для файла:

	1. Вводится количество вершин (не более 7) в !консоли!.
        2. Для каждой вершины вводится количество ее смежных в !консоли!.
        3. Из файла построчно считываются строки разной длинны c разделителем " " и разделителем между строками "\n",
        где каждой строке соответствует вершина.

        Пример:
        Для списка смежности:
        1: 2, 3
        2: 1, 3
        3: 1
        В файле будет:
        2 3
        1 3
        1

	4. Список ребер. (универсально для всех графов)

	|Для консоли:

        1. Вводится количество ребер (не более 50).
        2. Для каждого ребра вводится два числа разделенных " ", представляющих начало и конец ребра (не более 6).

	|Для файла:

        1. Вводится количество ребер в !консоли! (не более 50).
        2. Для каждого ребра в файле считываются два числа разделенных  " ",
        представляющих начало и конец ребра.

        Пример:
        Для списка ребер:
            Начало  Конец
        1:  2   3
        2:  1   3
        3:  1  2
        В файле будет:
        2 3
        1 3
        1 2

	5. FO. (универсально для всех графов)

	|Для консоли:

	1. Вводится размерность представления FO (не более 100).
	2. Вводится через " " каждый элемент представления.

	|Для файла:

	1. Вводится размерность представления FO в !консоли! (не более 100).
        2. В файле через " " каждый элемент представления.

	6. FI. (только для ориентированных)

	|Для консоли:

	1. Вводится размерность представления FI (не более 100).
	2. Вводится через " " каждый элемент представления.

	|Для файла:

        1. Вводится размерность представления FI в !консоли! (не более 100).
        2. В файле через " " каждый элемент представления.

	7. MFO. (универсально для всех графов)

	|Для консоли:

        1. Вводится размерность вектора представления MV (не более 20)
        2. Вводится каждый элемент MV через пробел
        3. Вводится размерность вектора представления ME (не более 100)
        4. Вводится каждый элемент ME через пробел.

	|Для файла:

        1. Вводится размерность вектора представления MV в !консоли! (не более 20)
        2. В файле каждый элемент MV через " ".
        3. Вводится размерность вектора представления ME !консоли! (не более 100)
        4. В файле каждый элемент ME через " ".

        Пример:
        Для представления:
        ME: [1, 2 , 1, 2, 3, 4, 3, 1, 2]
        MV: [2, 6, 7, 9]

        В файле будет:
        2 6 7 9
        1 2 1 2 3 4 3 1 2

	8. MFI. (только для ориентированных)

	|Для консоли:

        1. Вводится размерность вектора представления MV (не более 20)
        2. Вводится каждый элемент MV через пробел
        3. Вводится размерность вектора представления ME (не более 100)
        4. Вводится каждый элемент ME через пробел.

	|Для файла:

        1. Вводится размерность вектора представления MV в !консоли! (не более 20)
        2. В файле каждый элемент MV через " ".
        3. Вводится размерность вектора представления ME !консоли! (не более 100)
        4. В файле каждый элемент ME через " ".

        Пример:
        Показан для MFO.

 	9. BMFO. (только для неориентированных)

	|Для консоли:

        1. Вводится размерность вектора представления MV (не более 20)
        2. Вводится каждый элемент MV через пробел
        3. Вводится размерность вектора представления ME (не более 100)
        4. Вводится каждый элемент ME через пробел.

	|Для файла:

        1. Вводится размерность вектора представления MV в !консоли! (не более 20)
        2. В файле каждый элемент MV через " ".
        3. Вводится размерность вектора представления ME !консоли! (не более 100)
        4. В файле каждый элемент ME через " ".

        Пример:
        Показан для MFO.
              
	10. BFO. (только для неориентированных)

	|Для консоли:

	1. Вводится размерность представления BFO (не более 100).
	2. Вводится через " " каждый элемент представления.

	|Для файла:

	1. Вводится размерность представления BFO в !консоли! (не более 100).
        2. В файле через " " каждый элемент представления.


Соглашение кодстайла:

    1) Использованы однострочные комментарии на той-же строке через два пробела по соглашению кодстайла курса
       (Соглашение глава "Оформление" номер 10).
    2) Использованы однострочные комментарии над исполняемым кодом.
    3) Использованы документирующие комментарии для хедер файла Functions.h и файла main.cpp.
    4) Для имен функций и методов был выбран PascalCase (Соглашение глава "Именование" "Примеры" номер 2 (по порядку 6)).
    5) Комментарии к методам и функциям указаны в хедер файле.

Реализованный функционал:

    Способы хранения графа (10/10):
                Матрица смежности, Матрица инцидентности, Cписок смежности, Список ребер, FO, FI,
                MFO, MFI, MFO, BMFO, BFO.

    Cпособы обхода графа (4/4):
                В ширину линейно, В ширину рекурсивно, В глубину линейно, В глубину рекурсивно.

    Функции подсчета и вывод (3/3):
                степеней/полустепеней, ребер/дуг, вывод в любом представлении со сменой опцией 3.
  
Приятного использования! 
